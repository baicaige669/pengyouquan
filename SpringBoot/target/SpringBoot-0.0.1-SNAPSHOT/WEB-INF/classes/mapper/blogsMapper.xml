<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.Mybatis.mapper.blogsMapper">

    <resultMap id="BaseResultMap" type="com.feng.Mybatis.pojo.blogs">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="author_id" column="author_id" jdbcType="INTEGER"/>
            <result property="head" column="head" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="time" column="time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,author_id,head,
        content,time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from blogs
        where  id = #{id,jdbcType=INTEGER} 
    </select>
    <select id="selectall" resultType="com.feng.Mybatis.pojo.MultiQury.BlogMore">
        SELECT baseuser.id userid,username,nickname,blogs.id blogid,head,content,`time`,url,is_dele,`enable`
        FROM baseuser,blogs,files WHERE baseuser.id=blogs.author_id AND baseuser.phone=files.id ORDER BY `time` DESC
    </select>
    <select id="rank" resultType="com.feng.Mybatis.pojo.MultiQury.rank">
        SELECT author_id,username,nickname,COUNT( author_id ) AS NUMBER ,url FROM blogs,files,baseuser WHERE baseuser.id=author_id AND phone=files.id GROUP BY author_id ORDER BY NUMBER DESC
    </select>
    <select id="findkey" resultType="com.feng.Mybatis.pojo.blogs">
        select * from  blogs where id=0
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from blogs
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.feng.Mybatis.pojo.blogs" useGeneratedKeys="true">
        insert into blogs
        ( id,author_id,head
        ,content,time)
        values (#{id,jdbcType=INTEGER},#{author_id,jdbcType=INTEGER},#{head,jdbcType=VARCHAR}
        ,#{content,jdbcType=VARCHAR},now())
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.feng.Mybatis.pojo.blogs" useGeneratedKeys="true">
        insert into blogs
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="authorId != null">author_id,</if>
                <if test="head != null">head,</if>
                <if test="content != null">content,</if>
                <if test="time != null">time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="authorId != null">#{authorId,jdbcType=INTEGER},</if>
                <if test="head != null">#{head,jdbcType=VARCHAR},</if>
                <if test="content != null">#{content,jdbcType=VARCHAR},</if>
                <if test="time != null">#{time,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.feng.Mybatis.pojo.blogs">
        update blogs
        <set>
                <if test="author_id != null">
                    author_id = #{authorId,jdbcType=INTEGER},
                </if>
                <if test="head != null">
                    head = #{head,jdbcType=VARCHAR},
                </if>
                <if test="content != null">
                    content = #{content,jdbcType=VARCHAR},
                </if>
                <if test="time != null">
                    time = #{time,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.feng.Mybatis.pojo.blogs">
        update blogs
        set 
            author_id =  #{authorId,jdbcType=INTEGER},
            head =  #{head,jdbcType=VARCHAR},
            content =  #{content,jdbcType=VARCHAR},
            time =  #{time,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
